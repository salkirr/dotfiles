#
### Variables
#
    # Font
    font pango:Helvetica Neue, FontAwesome 12

    # Logo key. Use Mod1 for Alt.
    set $mod Mod4

    # Home row direction keys, like vim
    set $left h
    set $down j
    set $up k
    set $right l

    # Terminal Emulator
    set $term foot

    # Application launcher
    # set $menu bemenu-run -p bemenu -i --fixed-height --list 15 --center -W 0.2 -H 30 -B 3 -R 10 --cw 7 --ch 20 --fn "pango:DejaVu Sans Mono 14"
    set $menu fuzzel
#
### Autostart
#
    exec mako
    exec udiskie --tray
    exec nm-applet
    exec blueman-applet
    exec pasystray

    # exec_always python /usr/share/sway-contrib/inactive-windows-transparency.py
#
### Tools
#
    bindsym --to-code Print exec grim -g "$(slurp)" - | swappy -f -

#
### Output configuration
#

    # Monitors
    # coordinates are easier to calculate with `wdisplays` gui tool
    output HDMI-A-2 mode 1920x1080@60Hz render_bit_depth 10 pos 0 170
    output DP-4 mode 2560x1440@165Hz adaptive_sync on render_bit_depth 10 pos 1920 0

    # Wallpaper
    set $wallpapers_landscape $HOME/Wallpapers/Landscape
    set $wallpapers_portrait $HOME/Wallpapers/Portrait

    output HDMI-A-2 bg `find $wallpapers_landscape -type f | shuf -n 1` fill
    output DP-4 bg `find $wallpapers_landscape -type f | shuf -n 1` fill

    # for sharing screen with xdg-desktop-portal-wlr
    exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway

    # XWayland
    for_window [shell="xwayland"] title_format "[XWayland] %title"

#
### Idle configuration
#
    set $lock swaylock -f -k --color 000000 --indicator-idle-visible

    exec swayidle -w \
        timeout 600 "test (playerctl status) = 'Playing' && $lock" \
        timeout 1200 'test (playerctl status) = "Playing" && swaymsg "output * power off"' \
            resume 'swaymsg "output * power on"'

    bindsym --to-code Ctrl+Alt+l exec $lock
#
### Input configuration
#
    # Keyboard
    input "type:keyboard" {
        xkb_layout us,ru

        # switch capslock and esc; also use right alt to switch layout
        xkb_options caps:swapescape,grp:toggle
    }

    # Mouse
    input "type:pointer" {
        accel_profile flat
    }
#
### Control volume
#
    set $WOBSOCK $XDG_RUNTIME_DIR/wob.sock

    # TODO remove mute if volume is increased/decreased
    set $rise_volume wpctl set-volume @DEFAULT_AUDIO_SINK@ 2%+ && wpctl get-volume @DEFAULT_AUDIO_SINK@ | sed 's/[^0-9]//g' > $WOBSOCK
    set $lower_volume wpctl set-volume @DEFAULT_AUDIO_SINK@ 2%- && wpctl get-volume @DEFAULT_AUDIO_SINK@ | sed 's/[^0-9]//g' > $WOBSOCK
    set $mute wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle && (wpctl get-volume @DEFAULT_AUDIO_SINK@ | grep -q MUTED && echo 0 > $WOBSOCK) || wpctl get-volume @DEFAULT_AUDIO_SINK@ | sed 's/[^0-9]//g'> $WOBSOCK

    bindsym XF86AudioRaiseVolume exec $rise_volume
    bindsym XF86AudioLowerVolume exec $lower_volume
    bindsym XF86AudioMute exec $mute
#
### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym --to-code $mod+Return exec $term

    # Kill focused window
    bindsym --to-code $mod+q kill

    # TODO: doesn't work for some reason. maybe
    # The script is working fine when executed from terminal
    bindsym --to-code $mod+Ctrl+q exec wkill.sh

    # Start your launcher
    bindsym --to-code $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym --to-code $mod+Shift+r reload

    # Exit sway (logs you out of your Wayland session)
    bindsym --to-code $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym --to-code $mod+$left focus left
    bindsym --to-code $mod+$down focus down
    bindsym --to-code $mod+$up focus up
    bindsym --to-code $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym --to-code $mod+Left focus left
    bindsym --to-code $mod+Down focus down
    bindsym --to-code $mod+Up focus up
    bindsym --to-code $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym --to-code $mod+Shift+$left move left
    bindsym --to-code $mod+Shift+$down move down
    bindsym --to-code $mod+Shift+$up move up
    bindsym --to-code $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym --to-code $mod+Shift+Left move left
    bindsym --to-code $mod+Shift+Down move down
    bindsym --to-code $mod+Shift+Up move up
    bindsym --to-code $mod+Shift+Right move right
#
# Workspaces:
#
    # Workspace names
    set $ws1 number 1
    set $ws2 number 2
    set $ws3 number 3
    set $ws4 number 4
    set $ws5 number 5
    set $ws6 number 6
    set $ws7 number 7
    set $ws8 number 8
    set $ws9 number 9
    set $ws10 number 10

    # Switch to workspace
    bindsym --to-code $mod+1 workspace $ws1
    bindsym --to-code $mod+2 workspace $ws2
    bindsym --to-code $mod+3 workspace $ws3
    bindsym --to-code $mod+4 workspace $ws4
    bindsym --to-code $mod+5 workspace $ws5
    bindsym --to-code $mod+6 workspace $ws6
    bindsym --to-code $mod+7 workspace $ws7
    bindsym --to-code $mod+8 workspace $ws8
    bindsym --to-code $mod+9 workspace $ws9
    bindsym --to-code $mod+0 workspace $ws10

    # Move focused container to workspace
    bindsym --to-code $mod+Ctrl+1 move container to workspace $ws1
    bindsym --to-code $mod+Ctrl+2 move container to workspace $ws2
    bindsym --to-code $mod+Ctrl+3 move container to workspace $ws3
    bindsym --to-code $mod+Ctrl+4 move container to workspace $ws4
    bindsym --to-code $mod+Ctrl+5 move container to workspace $ws5
    bindsym --to-code $mod+Ctrl+6 move container to workspace $ws6
    bindsym --to-code $mod+Ctrl+7 move container to workspace $ws7
    bindsym --to-code $mod+Ctrl+8 move container to workspace $ws8
    bindsym --to-code $mod+Ctrl+9 move container to workspace $ws9
    bindsym --to-code $mod+Ctrl+0 move container to workspace $ws10

    # Move to workspace with focused container
    bindsym --to-code $mod+Shift+1 move container to workspace $ws1; workspace $ws1
    bindsym --to-code $mod+Shift+2 move container to workspace $ws2; workspace $ws2
    bindsym --to-code $mod+Shift+3 move container to workspace $ws3; workspace $ws3
    bindsym --to-code $mod+Shift+4 move container to workspace $ws4; workspace $ws4
    bindsym --to-code $mod+Shift+5 move container to workspace $ws5; workspace $ws5
    bindsym --to-code $mod+Shift+6 move container to workspace $ws6; workspace $ws6
    bindsym --to-code $mod+Shift+7 move container to workspace $ws7; workspace $ws7
    bindsym --to-code $mod+Shift+8 move container to workspace $ws8; workspace $ws8
    bindsym --to-code $mod+Shift+9 move container to workspace $ws9; workspace $ws9
    bindsym --to-code $mod+Shift+0 move container to workspace $ws10; workspace $ws10

    # Move workspace to another display
    bindsym --to-code $mod+x move workspace to output left
#
# Layout stuff:
#
    # Toggle split
    bindsym --to-code $mod+Shift+q split toggle

    # Switch the current container between different layout styles
    bindsym --to-code $mod+s layout stacking
    bindsym --to-code $mod+w layout tabbed
    bindsym --to-code $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym --to-code $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym --to-code $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym --to-code $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym --to-code $mod+a focus parent

    workspace_auto_back_and_forth yes
    bindsym --to-code $mod+Tab workspace back_and_forth
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym --to-code $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym --to-code $mod+minus scratchpad show
#
# Resizing containers:
#
    mode "resize" {
        # left will shrink the containers width
        # right will grow the containers width
        # up will shrink the containers height
        # down will grow the containers height
        bindsym --to-code $left resize shrink width 10px
        bindsym --to-code $down resize grow height 10px
        bindsym --to-code $up resize shrink height 10px
        bindsym --to-code $right resize grow width 10px

        # Ditto, with arrow keys
        bindsym Left resize shrink width 10px
        bindsym Down resize grow height 10px
        bindsym Up resize shrink height 10px
        bindsym Right resize grow width 10px

        # Return to default mode
        bindsym Return mode "default"
        bindsym Escape mode "default"
    }
    bindsym --to-code $mod+r mode "resize"
#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
    bar {
        swaybar_command waybar

        position top

        # When the status_command prints a new line to stdout, swaybar updates.
        # The default just shows the current date and time.
        status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done

        colors {
            statusline #ffffff
            background #323232
            inactive_workspace #32323200 #32323200 #5c5c5c
        }
    }
#
# Gaps and borders
#
    gaps inner 5
    gaps outer -2

    smart_gaps on
    smart_borders on

    default_border pixel 2
#
# Other
#
include /etc/sway/config.d/*
